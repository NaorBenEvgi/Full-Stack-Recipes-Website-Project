openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
- url: https://virtserver.swaggerhub.com/naorbe/recipes/1.0.0
  description: SwaggerHub API Auto Mocking hey
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /register:
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /login:
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: |
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /users/favorites:
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's favorites recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/recipesInfo/{ids}:
    get:
      tags:
      - Users
      description: Return user's info about recipes by their ids
      parameters:
      - name: ids
        in: path
        description: Ids of recipes in array
        required: true
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: integer
      responses:
        "200":
          description: Object which contains the user's info for the relevant recipes
            ids
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  required:
                  - saved
                  - watched
                  type: object
                  properties:
                    watched:
                      type: boolean
                    saved:
                      type: boolean
                description: A dictionary with the recipe's id as a key and the info
                  (watched/saved) as a value
                example:
                  "123":
                    watched: true
                    saved: false
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/watched:
    post:
      tags:
      - Users
      description: mark recipe as watched for the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "200":
          description: Marked successfully the recipe as watched
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/lastWatched:
    get:
      tags:
      - Users
      description: Return the last three recipes that the user watched ordering by
        decending time
      responses:
        "200":
          description: Array with three integers that represents the last recipes
            the user watched
          content:
            application/json:
              schema:
                type: array
                description: list of recipe ids
                items:
                  type: string
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/personalRecipes:
    get:
      tags:
      - Users
      description: Return the personal recipes that the user created
      responses:
        "200":
          description: Array with preview of the personal recipes that created by
            the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/familyRecipes:
    get:
      tags:
      - Users
      description: Return the family recipes that the user created
      responses:
        "200":
          description: Array with the family recipes that created by the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/personalRecipes/{personalRecipeID}:
    get:
      tags:
      - Users
      description: Return the full information about a specific personal recipes that
        belongs to the user
      parameters:
      - name: personalRecipeID
        in: path
        description: Id of personal recipes
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: A personal recipe that created by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "401":
          description: user is not authorized
        "404":
          description: recipe wasn't found
      security:
      - cookieAuth: []
  /recipes/{recipeId}:
    get:
      tags:
      - Recipes
      summary: Return full details on recipe by his ID
      description: Return full details on recipe by his ID
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "404":
          description: recipeId is not exists
  /recipes/search/query/{searchQuery}/amount/{num}:
    get:
      tags:
      - Recipes
      summary: search recipes based on params that send by a query
      description: Serach for recipes by a search query. Will return resuslts from
        spoonacular API, according to number param, which can be filtered by Cusine,
        diet, intolerance.
      parameters:
      - name: searchQuery
        in: path
        description: The recipe search query
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: burger
      - name: num
        in: path
        description: The number of results to return (5/10/15)
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 5
          enum:
          - 5
          - 10
          - 15
        example: 10
      - name: cuisine
        in: query
        description: The cuisine(s) of the recipes
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Cuisine'
        example:
        - italian
      - name: diet
        in: query
        description: The diet for which the recipes must be suitable
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Diet'
        example:
        - vegetarian
      - name: intolerances
        in: query
        description: All recipes returned must not contain ingredients that are not
          suitable for people with the intolerances entered.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Intolerances'
        example:
        - gluten
      responses:
        "200":
          description: Successful retrieved search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "204":
          description: No recipes founds for the search query
  /recipes/random:
    get:
      tags:
      - Recipes
      summary: Return three random recipes
      description: Get three random recipes from the server
      responses:
        "200":
          description: data about three random recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "400":
          description: wrong input parameters
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: royju
        firstname:
          type: string
          description: user's first name
          example: Roy
        lastname:
          type: string
          description: user's last name
          example: Judes
        country:
          type: string
          description: user's country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: roy@56
        email:
          pattern: email
          type: string
          description: user's email
          example: royju22@gmail.com
        image-url:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins letters only
        password:
          maxLength: 10
          minLength: 5
          description: password conatins at least one number and one special char
          format: password
      example:
        username: royju
        password: roy@55
    RecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
    Recipe:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        ingredients:
          type: array
          description: list of ingredients
          items:
            type: string
        instructions:
          type: array
          description: list if instructions
          example:
          - combine the flour and Moroccan spice mixture.
          - Add chicken pieces.
          - Heat oil in your pressure cooker
          items:
            type: string
        servings:
          type: integer
          description: how many portions you get from this recipe
    Cuisine:
      type: string
      enum:
      - African
      - American
      - British
      - Cajun
      - Caribbean
      - Chinese
      - Eastern European
      - European
      - French
      - German
      - Greek
      - Indian
      - Irish
      - Italian
      - Japanese
      - Jewish
      - Korean
      - Latin American
      - Mediterranean
      - Mexican
      - Middle Eastern
      - Nordic
      - Southern
      - Spanish
      - Thai
      - Vietnamese
    Diet:
      type: string
      enum:
      - Gluten Free
      - Ketogenic
      - Vegetarian
      - Lacto-Vegetarian
      - Ovo-Vegetarian
      - Vegan
      - Pescetarian
      - Paleo
      - Primal
      - Whole30
    Intolerances:
      type: string
      enum:
      - Dairy
      - Egg
      - Gluten
      - Grain
      - Peanut
      - Seafood
      - Sesame
      - Shellfish
      - Soy
      - Sulfite
      - Tree Nut
      - Wheat
    FamilyRecipe:
      type: object
      properties:
        id:
          type: integer
          description: family recipe's identifier
          example: 1000
        title:
          type: string
          description: family recipe's name
          example: Simple Macaroni and Cheese
        author:
          type: string
          description: the author of the recipe
          example: grandma
        recommended_time:
          type: string
          description: the time in year the recipe is made
          example: grandma
        image:
          type: string
          description: family recipe's image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        ingredients:
          type: array
          description: list of ingredients
          items:
            type: string
        instructions:
          type: array
          description: list if instructions
          example:
          - combine the flour and Moroccan spice mixture.
          - Add chicken pieces.
          - Heat oil in your pressure cooker
          items:
            type: string
    body:
      type: object
      properties:
        recipeId:
          type: string
          description: recipe's id which the user watched
      example:
        recipeId: "1234"
    body_1:
      type: object
      properties:
        recipeId:
          type: string
          description: recipe's id which the user watched
      example:
        recipeId: "1234"
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: session
      in: cookie
